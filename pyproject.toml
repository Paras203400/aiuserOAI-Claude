[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "red-gpt5assistant"
version = "1.0.0"
description = "Production-ready GPT-5 assistant cog for Red-DiscordBot"
authors = [{name = "GPT5Assistant"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "openai>=2.0.0",
    "httpx",
    "tenacity",
    "aiofiles",
    "tiktoken",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-asyncio",
    "pytest-mock",
    "ruff",
    "mypy",
    "black",
]

[tool.ruff]
line-length = 88
target-version = "py311"
select = ["E", "W", "F", "I", "N", "UP", "ANN", "S", "B", "A", "COM", "C4", "DTZ", "T10", "EM", "EXE", "ISC", "ICN", "G", "INP", "PIE", "T20", "PT", "Q", "RSE", "RET", "SLF", "SIM", "TID", "TCH", "ARG", "PTH", "ERA", "PD", "PGH", "PL", "TRY", "NPY", "RUF"]
ignore = ["ANN101", "ANN102", "S101", "PLR2004", "PLR0913", "PLR0912", "PLR0915"]

[tool.ruff.per-file-ignores]
"tests/**" = ["S101", "PLR2004", "ANN"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]