name: Release

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to PyPI
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: twine upload dist/*

  tag-repo:
    runs-on: ubuntu-latest
    name: Update repository info
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Update info.json version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "Updating version to $VERSION"
        
        # Update info.json with new version
        python -c "
import json
with open('info.json', 'r') as f:
    data = json.load(f)
data['version'] = '$VERSION'
with open('info.json', 'w') as f:
    json.dump(data, f, indent=4)
print('Updated info.json')
"
    
    - name: Commit version update
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add info.json
        git diff --staged --quiet || git commit -m "Update version to ${GITHUB_REF#refs/tags/v}"
        git push || true