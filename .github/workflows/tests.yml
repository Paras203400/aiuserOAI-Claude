name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Linting (ruff)
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff
    
    - name: Run ruff check
      run: ruff check gpt5assistant/ tests/
    
    - name: Run ruff format check
      run: ruff format --check gpt5assistant/ tests/

  type-check:
    runs-on: ubuntu-latest
    name: Type checking (mypy)
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mypy
        pip install -e ".[dev]"
    
    - name: Run mypy
      run: mypy gpt5assistant/

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
    
    name: Tests (Python ${{ matrix.python-version }})
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run unit tests
      run: |
        pytest tests/unit/ -v --cov=gpt5assistant --cov-report=xml --cov-report=term-missing
    
    - name: Run integration tests
      run: |
        pytest tests/integration/ -v
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  security:
    runs-on: ubuntu-latest
    name: Security scan (bandit)
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit[toml]
    
    - name: Run bandit
      run: bandit -r gpt5assistant/ -f json -o bandit-report.json || true
    
    - name: Show bandit results
      run: |
        if [ -f bandit-report.json ]; then
          python -m json.tool bandit-report.json
        fi

  package:
    runs-on: ubuntu-latest
    name: Package validation
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: twine check dist/*
    
    - name: Test installation
      run: |
        pip install dist/*.whl
        python -c "import gpt5assistant; print('Package imports successfully')"

  requirements-check:
    runs-on: ubuntu-latest
    name: Dependency check
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety pip-audit
    
    - name: Check for known security vulnerabilities
      run: |
        # Create requirements file from pyproject.toml
        python -c "
import tomli
with open('pyproject.toml', 'rb') as f:
    data = tomli.load(f)
deps = data['project']['dependencies']
with open('requirements.txt', 'w') as f:
    for dep in deps:
        f.write(dep + '\n')
"
        safety check -r requirements.txt || true
    
    - name: Run pip-audit
      run: pip-audit --desc || true